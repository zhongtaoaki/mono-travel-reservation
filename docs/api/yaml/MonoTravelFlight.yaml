openapi: 3.0.2
info:
  title: MonoTravelReservation API
  description: Microservice sample. Monolithic application sample.
  version: '1.0'
servers:
- url: http://localhost:11080
tags:
- name: Application
  description: 旅行申込
- name: Itinerary
  description: 予約旅程
paths:
  /application:
    post:
      tags:
      - Application
      summary: Resister application.
      description: Reserve flights and hotels, and resister application and itinerary.
      operationId: reserve
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationInfo'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        409:
          description: No vacancies, or flight seat.
  /itinerary:
    get:
      tags:
      - Itinerary
      summary: Get Itinerary.
      description: Get reserved itinerary information for itinerary id.
      operationId: getAllItinerary
      parameters:
      - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        404:
          description: Not found response
  /itinerary/getAll:
    get:
      tags:
      - Itinerary
      summary: Get all Itineraries.
      description: Get all reserved itinerary informations.
      operationId: getAllItineraries
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itineraries'
        404:
          description: Not found response
components:
  parameters:
    id:
      name: id
      in: query
      description: Itinerary id.
      schema:
        type: integer
        format: int64
  schemas:
    Itineraries:
      title: Itineraries
      type: array
      items:
        $ref: '#/components/schemas/Itinerary'
    Itinerary:
      title: Itinerary
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        updatedAt:
          type: string
          format: date-time
          example: '2020-01-01T09:00:00+09:00'
        tourists:
          type: array
          items:
            type: string
            example: Saito
          description: Flights that tourists wants.
        desiredFlights:
          type: array
          items:
            $ref: '#/components/schemas/FlightReservation'
          description: Flights that tourists wants.
        desiredHotels:
          type: array
          items:
            $ref: '#/components/schemas/HotelReservation'
          description: Hotels that tourists wants.
    FlightReservation:
      title: FlightReservation
      type: object
      properties:
        flightReservationId:
          type: integer
          format: int64
          example: 1
        flightName:
          type: string
          example: ABC123
        departureDateTime:
          type: string
          format: date-time
          example: '2020-01-01T09:00:00+09:00'
        departureAirport:
          type: string
          example: 'HND'
        arrivalDateTime:
          type: string
          format: date-time
          example: '2020-01-01T10:30:00+09:00'
        arrivalAirport:
          type: string
          example: 'OSA'
        seatNo:
          type: string
          example: 10F
    HotelReservation:
      title: HotelReservation
      type: object
      properties:
        hotelReservationId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Hotel Tokyo
        checkInDate:
          type: string
          format: date
          example: '2020-01-01'
        checkOutDate:
          type: string
          format: date
          example: '2020-01-02'
        roomNo:
          type: string
          example: 2401
    ApplicationInfo:
      title: ApplicationInfo
      type: object
      properties:
        tourists:
          type: array
          items:
            type: string
            example: Saito
          description: Flights that tourists wants.
        desiredFlights:
          type: array
          items:
            $ref: '#/components/schemas/FlightApplicationInfo'
          description: Flights that tourists wants.
        desiredHotels:
          type: array
          items:
            $ref: '#/components/schemas/HotelApplicationInfo'
          description: Hotels that tourists wants.
    FlightApplicationInfo:
      title: FlightApplicationInfo
      type: object
      properties:
        flightName:
          type: string
          example: ABC123
        departureDate:
          type: string
          format: date
          example: '2020-01-01'
    HotelApplicationInfo:
      title: HotelApplicationInfo
      type: object
      properties:
        name:
          type: string
          example: Hotel Tokyo
        checkInDate:
          type: string
          format: date
          example: '2020-01-01'
        checkOutDate:
          type: string
          format: date
          example: '2020-01-02'